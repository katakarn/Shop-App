name: Java CI with Maven

# กำหนดให้รันเมื่อมีการ Push โค้ด หรือมีการสร้าง Pull Request ไปที่ branch 'main'
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest # ใช้ Ubuntu เป็น OS สำหรับรัน
    
    steps:
      - uses: actions/checkout@v4 # 1. Checkout โค้ด

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven # ใช้ Maven Cache เพื่อเร่งความเร็ว

      - name: Run Unit Tests and Build with Maven
        env:
          SPRING_PROFILES_ACTIVE: test
        run: mvn -B clean verify # สั่งให้ Maven รัน clean, compile, และรัน Tests ทั้งหมด (Unit และ Integration)

      - name: Run Integration Tests (Requires DB Connection)
        env:
          # กำหนด Environment Variables ให้ Spring Boot เชื่อมต่อ DB ที่สร้างใน Action
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/shopapp_db
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: testpassword
        run: mvn test

      - name: Docker Login (ถ้าคุณจะ Deploy จริงจัง)
        # ส่วนนี้จะใช้สำหรับขั้นตอนการสร้างและ Push Docker Image (ขั้นตอนต่อไป)
        if: success()
        run: echo "Build successful and ready for deployment steps..."